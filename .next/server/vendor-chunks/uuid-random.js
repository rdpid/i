"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/uuid-random";
exports.ids = ["vendor-chunks/uuid-random"];
exports.modules = {

/***/ "(ssr)/./node_modules/uuid-random/index.js":
/*!*******************************************!*\
  !*** ./node_modules/uuid-random/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n(function() {\n    var buf, bufIdx = 0, hexBytes = [], i;\n    // Pre-calculate toString(16) for speed\n    for(i = 0; i < 256; i++){\n        hexBytes[i] = (i + 0x100).toString(16).substr(1);\n    }\n    // Buffer random numbers for speed\n    // Reduce memory usage by decreasing this number (min 16)\n    // or improve speed by increasing this number (try 16384)\n    uuid.BUFFER_SIZE = 4096;\n    // Binary uuids\n    uuid.bin = uuidBin;\n    // Clear buffer\n    uuid.clearBuffer = function() {\n        buf = null;\n        bufIdx = 0;\n    };\n    // Test for uuid\n    uuid.test = function(uuid) {\n        if (typeof uuid === \"string\") {\n            return /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(uuid);\n        }\n        return false;\n    };\n    // Node & Browser support\n    var crypt0;\n    if (typeof crypto !== \"undefined\") {\n        crypt0 = crypto;\n    } else if (false) {}\n    if (true) {\n        crypt0 = crypt0 || __webpack_require__(/*! crypto */ \"crypto\");\n        module.exports = uuid;\n    } else {}\n    // Use best available PRNG\n    // Also expose this so you can override it.\n    uuid.randomBytes = function() {\n        if (crypt0) {\n            if (crypt0.randomBytes) {\n                return crypt0.randomBytes;\n            }\n            if (crypt0.getRandomValues) {\n                if (typeof Uint8Array.prototype.slice !== \"function\") {\n                    return function(n) {\n                        var bytes = new Uint8Array(n);\n                        crypt0.getRandomValues(bytes);\n                        return Array.from(bytes);\n                    };\n                }\n                return function(n) {\n                    var bytes = new Uint8Array(n);\n                    crypt0.getRandomValues(bytes);\n                    return bytes;\n                };\n            }\n        }\n        return function(n) {\n            var i, r = [];\n            for(i = 0; i < n; i++){\n                r.push(Math.floor(Math.random() * 256));\n            }\n            return r;\n        };\n    }();\n    // Buffer some random bytes for speed\n    function randomBytesBuffered(n) {\n        if (!buf || bufIdx + n > uuid.BUFFER_SIZE) {\n            bufIdx = 0;\n            buf = uuid.randomBytes(uuid.BUFFER_SIZE);\n        }\n        return buf.slice(bufIdx, bufIdx += n);\n    }\n    // uuid.bin\n    function uuidBin() {\n        var b = randomBytesBuffered(16);\n        b[6] = b[6] & 0x0f | 0x40;\n        b[8] = b[8] & 0x3f | 0x80;\n        return b;\n    }\n    // String UUIDv4 (Random)\n    function uuid() {\n        var b = uuidBin();\n        return hexBytes[b[0]] + hexBytes[b[1]] + hexBytes[b[2]] + hexBytes[b[3]] + \"-\" + hexBytes[b[4]] + hexBytes[b[5]] + \"-\" + hexBytes[b[6]] + hexBytes[b[7]] + \"-\" + hexBytes[b[8]] + hexBytes[b[9]] + \"-\" + hexBytes[b[10]] + hexBytes[b[11]] + hexBytes[b[12]] + hexBytes[b[13]] + hexBytes[b[14]] + hexBytes[b[15]];\n    }\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdXVpZC1yYW5kb20vaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFWjtJQUVDLElBQ0VBLEtBQ0FDLFNBQVMsR0FDVEMsV0FBVyxFQUFFLEVBQ2JDO0lBR0YsdUNBQXVDO0lBQ3ZDLElBQUtBLElBQUksR0FBR0EsSUFBSSxLQUFLQSxJQUFLO1FBQ3hCRCxRQUFRLENBQUNDLEVBQUUsR0FBRyxDQUFDQSxJQUFJLEtBQUksRUFBR0MsUUFBUSxDQUFDLElBQUlDLE1BQU0sQ0FBQztJQUNoRDtJQUVBLGtDQUFrQztJQUNsQyx5REFBeUQ7SUFDekQseURBQXlEO0lBQ3pEQyxLQUFLQyxXQUFXLEdBQUc7SUFFbkIsZUFBZTtJQUNmRCxLQUFLRSxHQUFHLEdBQUdDO0lBRVgsZUFBZTtJQUNmSCxLQUFLSSxXQUFXLEdBQUc7UUFDakJWLE1BQU07UUFDTkMsU0FBUztJQUNYO0lBRUEsZ0JBQWdCO0lBQ2hCSyxLQUFLSyxJQUFJLEdBQUcsU0FBU0wsSUFBSTtRQUN2QixJQUFJLE9BQU9BLFNBQVMsVUFBVTtZQUM1QixPQUFPLHlFQUF5RUssSUFBSSxDQUFDTDtRQUN2RjtRQUNBLE9BQU87SUFDVDtJQUVBLHlCQUF5QjtJQUN6QixJQUFJTTtJQUNKLElBQUksT0FBT0MsV0FBVyxhQUFhO1FBQ2pDRCxTQUFTQztJQUNYLE9BQU8sSUFBSSxLQUErRCxFQUFjLEVBRXZGO0lBRUQsSUFBSSxJQUF1RCxFQUFhO1FBQ3RFRCxTQUFTQSxVQUFVSyxtQkFBT0EsQ0FBQztRQUMzQkQsT0FBT0UsT0FBTyxHQUFHWjtJQUNuQixPQUFPLEVBRU47SUFFRCwwQkFBMEI7SUFDMUIsMkNBQTJDO0lBQzNDQSxLQUFLYSxXQUFXLEdBQUc7UUFDakIsSUFBSVAsUUFBUTtZQUNWLElBQUlBLE9BQU9PLFdBQVcsRUFBRTtnQkFDdEIsT0FBT1AsT0FBT08sV0FBVztZQUMzQjtZQUNBLElBQUlQLE9BQU9RLGVBQWUsRUFBRTtnQkFDMUIsSUFBSSxPQUFPQyxXQUFXQyxTQUFTLENBQUNDLEtBQUssS0FBSyxZQUFZO29CQUNwRCxPQUFPLFNBQVNDLENBQUM7d0JBQ2YsSUFBSUMsUUFBUSxJQUFJSixXQUFXRzt3QkFDM0JaLE9BQU9RLGVBQWUsQ0FBQ0s7d0JBQ3ZCLE9BQU9DLE1BQU1DLElBQUksQ0FBQ0Y7b0JBQ3BCO2dCQUNGO2dCQUNBLE9BQU8sU0FBU0QsQ0FBQztvQkFDZixJQUFJQyxRQUFRLElBQUlKLFdBQVdHO29CQUMzQlosT0FBT1EsZUFBZSxDQUFDSztvQkFDdkIsT0FBT0E7Z0JBQ1Q7WUFDRjtRQUNGO1FBQ0EsT0FBTyxTQUFTRCxDQUFDO1lBQ2YsSUFBSXJCLEdBQUd5QixJQUFJLEVBQUU7WUFDYixJQUFLekIsSUFBSSxHQUFHQSxJQUFJcUIsR0FBR3JCLElBQUs7Z0JBQ3RCeUIsRUFBRUMsSUFBSSxDQUFDQyxLQUFLQyxLQUFLLENBQUNELEtBQUtFLE1BQU0sS0FBSztZQUNwQztZQUNBLE9BQU9KO1FBQ1Q7SUFDRjtJQUVBLHFDQUFxQztJQUNyQyxTQUFTSyxvQkFBb0JULENBQUM7UUFDNUIsSUFBSSxDQUFDeEIsT0FBUSxTQUFVd0IsSUFBS2xCLEtBQUtDLFdBQVcsRUFBRztZQUM3Q04sU0FBUztZQUNURCxNQUFNTSxLQUFLYSxXQUFXLENBQUNiLEtBQUtDLFdBQVc7UUFDekM7UUFDQSxPQUFPUCxJQUFJdUIsS0FBSyxDQUFDdEIsUUFBUUEsVUFBVXVCO0lBQ3JDO0lBRUEsV0FBVztJQUNYLFNBQVNmO1FBQ1AsSUFBSXlCLElBQUlELG9CQUFvQjtRQUM1QkMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFFLENBQUMsRUFBRSxHQUFHLE9BQVE7UUFDdkJBLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBRSxDQUFDLEVBQUUsR0FBRyxPQUFRO1FBQ3ZCLE9BQU9BO0lBQ1Q7SUFFQSx5QkFBeUI7SUFDekIsU0FBUzVCO1FBQ1AsSUFBSTRCLElBQUl6QjtRQUNSLE9BQU9QLFFBQVEsQ0FBQ2dDLENBQUMsQ0FBQyxFQUFFLENBQUMsR0FBR2hDLFFBQVEsQ0FBQ2dDLENBQUMsQ0FBQyxFQUFFLENBQUMsR0FDcENoQyxRQUFRLENBQUNnQyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUdoQyxRQUFRLENBQUNnQyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFDbENoQyxRQUFRLENBQUNnQyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUdoQyxRQUFRLENBQUNnQyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFDbENoQyxRQUFRLENBQUNnQyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUdoQyxRQUFRLENBQUNnQyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFDbENoQyxRQUFRLENBQUNnQyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUdoQyxRQUFRLENBQUNnQyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFDbENoQyxRQUFRLENBQUNnQyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUdoQyxRQUFRLENBQUNnQyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQ2pDaEMsUUFBUSxDQUFDZ0MsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHaEMsUUFBUSxDQUFDZ0MsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUNqQ2hDLFFBQVEsQ0FBQ2dDLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBR2hDLFFBQVEsQ0FBQ2dDLENBQUMsQ0FBQyxHQUFHLENBQUM7SUFFckM7QUFFRiIsInNvdXJjZXMiOlsid2VicGFjazovL0BmYWwtYWkvc2R4bC1saWdodG5pbmcvLi9ub2RlX21vZHVsZXMvdXVpZC1yYW5kb20vaW5kZXguanM/ZGY1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuKGZ1bmN0aW9uKCl7XG5cbiAgdmFyXG4gICAgYnVmLFxuICAgIGJ1ZklkeCA9IDAsXG4gICAgaGV4Qnl0ZXMgPSBbXSxcbiAgICBpXG4gIDtcblxuICAvLyBQcmUtY2FsY3VsYXRlIHRvU3RyaW5nKDE2KSBmb3Igc3BlZWRcbiAgZm9yIChpID0gMDsgaSA8IDI1NjsgaSsrKSB7XG4gICAgaGV4Qnl0ZXNbaV0gPSAoaSArIDB4MTAwKS50b1N0cmluZygxNikuc3Vic3RyKDEpO1xuICB9XG5cbiAgLy8gQnVmZmVyIHJhbmRvbSBudW1iZXJzIGZvciBzcGVlZFxuICAvLyBSZWR1Y2UgbWVtb3J5IHVzYWdlIGJ5IGRlY3JlYXNpbmcgdGhpcyBudW1iZXIgKG1pbiAxNilcbiAgLy8gb3IgaW1wcm92ZSBzcGVlZCBieSBpbmNyZWFzaW5nIHRoaXMgbnVtYmVyICh0cnkgMTYzODQpXG4gIHV1aWQuQlVGRkVSX1NJWkUgPSA0MDk2O1xuXG4gIC8vIEJpbmFyeSB1dWlkc1xuICB1dWlkLmJpbiA9IHV1aWRCaW47XG5cbiAgLy8gQ2xlYXIgYnVmZmVyXG4gIHV1aWQuY2xlYXJCdWZmZXIgPSBmdW5jdGlvbigpIHtcbiAgICBidWYgPSBudWxsO1xuICAgIGJ1ZklkeCA9IDA7XG4gIH07XG5cbiAgLy8gVGVzdCBmb3IgdXVpZFxuICB1dWlkLnRlc3QgPSBmdW5jdGlvbih1dWlkKSB7XG4gICAgaWYgKHR5cGVvZiB1dWlkID09PSAnc3RyaW5nJykge1xuICAgICAgcmV0dXJuIC9eWzAtOWEtZl17OH0tWzAtOWEtZl17NH0tNFswLTlhLWZdezN9LVs4OWFiXVswLTlhLWZdezN9LVswLTlhLWZdezEyfSQvaS50ZXN0KHV1aWQpO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH07XG5cbiAgLy8gTm9kZSAmIEJyb3dzZXIgc3VwcG9ydFxuICB2YXIgY3J5cHQwO1xuICBpZiAodHlwZW9mIGNyeXB0byAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBjcnlwdDAgPSBjcnlwdG87XG4gIH0gZWxzZSBpZiggKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSAmJiAodHlwZW9mIHdpbmRvdy5tc0NyeXB0byAhPT0gJ3VuZGVmaW5lZCcpKSB7XG4gICAgY3J5cHQwID0gd2luZG93Lm1zQ3J5cHRvOyAvLyBJRTExXG4gIH1cblxuICBpZiAoKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnKSAmJiAodHlwZW9mIHJlcXVpcmUgPT09ICdmdW5jdGlvbicpKSB7XG4gICAgY3J5cHQwID0gY3J5cHQwIHx8IHJlcXVpcmUoJ2NyeXB0bycpO1xuICAgIG1vZHVsZS5leHBvcnRzID0gdXVpZDtcbiAgfSBlbHNlIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIHdpbmRvdy51dWlkID0gdXVpZDtcbiAgfVxuXG4gIC8vIFVzZSBiZXN0IGF2YWlsYWJsZSBQUk5HXG4gIC8vIEFsc28gZXhwb3NlIHRoaXMgc28geW91IGNhbiBvdmVycmlkZSBpdC5cbiAgdXVpZC5yYW5kb21CeXRlcyA9IChmdW5jdGlvbigpe1xuICAgIGlmIChjcnlwdDApIHtcbiAgICAgIGlmIChjcnlwdDAucmFuZG9tQnl0ZXMpIHtcbiAgICAgICAgcmV0dXJuIGNyeXB0MC5yYW5kb21CeXRlcztcbiAgICAgIH1cbiAgICAgIGlmIChjcnlwdDAuZ2V0UmFuZG9tVmFsdWVzKSB7XG4gICAgICAgIGlmICh0eXBlb2YgVWludDhBcnJheS5wcm90b3R5cGUuc2xpY2UgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICByZXR1cm4gZnVuY3Rpb24obikge1xuICAgICAgICAgICAgdmFyIGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkobik7XG4gICAgICAgICAgICBjcnlwdDAuZ2V0UmFuZG9tVmFsdWVzKGJ5dGVzKTtcbiAgICAgICAgICAgIHJldHVybiBBcnJheS5mcm9tKGJ5dGVzKTtcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmdW5jdGlvbihuKSB7XG4gICAgICAgICAgdmFyIGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkobik7XG4gICAgICAgICAgY3J5cHQwLmdldFJhbmRvbVZhbHVlcyhieXRlcyk7XG4gICAgICAgICAgcmV0dXJuIGJ5dGVzO1xuICAgICAgICB9O1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZnVuY3Rpb24obikge1xuICAgICAgdmFyIGksIHIgPSBbXTtcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgci5wdXNoKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDI1NikpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHI7XG4gICAgfTtcbiAgfSkoKTtcblxuICAvLyBCdWZmZXIgc29tZSByYW5kb20gYnl0ZXMgZm9yIHNwZWVkXG4gIGZ1bmN0aW9uIHJhbmRvbUJ5dGVzQnVmZmVyZWQobikge1xuICAgIGlmICghYnVmIHx8ICgoYnVmSWR4ICsgbikgPiB1dWlkLkJVRkZFUl9TSVpFKSkge1xuICAgICAgYnVmSWR4ID0gMDtcbiAgICAgIGJ1ZiA9IHV1aWQucmFuZG9tQnl0ZXModXVpZC5CVUZGRVJfU0laRSk7XG4gICAgfVxuICAgIHJldHVybiBidWYuc2xpY2UoYnVmSWR4LCBidWZJZHggKz0gbik7XG4gIH1cblxuICAvLyB1dWlkLmJpblxuICBmdW5jdGlvbiB1dWlkQmluKCkge1xuICAgIHZhciBiID0gcmFuZG9tQnl0ZXNCdWZmZXJlZCgxNik7XG4gICAgYls2XSA9IChiWzZdICYgMHgwZikgfCAweDQwO1xuICAgIGJbOF0gPSAoYls4XSAmIDB4M2YpIHwgMHg4MDtcbiAgICByZXR1cm4gYjtcbiAgfVxuXG4gIC8vIFN0cmluZyBVVUlEdjQgKFJhbmRvbSlcbiAgZnVuY3Rpb24gdXVpZCgpIHtcbiAgICB2YXIgYiA9IHV1aWRCaW4oKTtcbiAgICByZXR1cm4gaGV4Qnl0ZXNbYlswXV0gKyBoZXhCeXRlc1tiWzFdXSArXG4gICAgICBoZXhCeXRlc1tiWzJdXSArIGhleEJ5dGVzW2JbM11dICsgJy0nICtcbiAgICAgIGhleEJ5dGVzW2JbNF1dICsgaGV4Qnl0ZXNbYls1XV0gKyAnLScgK1xuICAgICAgaGV4Qnl0ZXNbYls2XV0gKyBoZXhCeXRlc1tiWzddXSArICctJyArXG4gICAgICBoZXhCeXRlc1tiWzhdXSArIGhleEJ5dGVzW2JbOV1dICsgJy0nICtcbiAgICAgIGhleEJ5dGVzW2JbMTBdXSArIGhleEJ5dGVzW2JbMTFdXSArXG4gICAgICBoZXhCeXRlc1tiWzEyXV0gKyBoZXhCeXRlc1tiWzEzXV0gK1xuICAgICAgaGV4Qnl0ZXNbYlsxNF1dICsgaGV4Qnl0ZXNbYlsxNV1dXG4gICAgO1xuICB9XG5cbn0pKCk7XG4iXSwibmFtZXMiOlsiYnVmIiwiYnVmSWR4IiwiaGV4Qnl0ZXMiLCJpIiwidG9TdHJpbmciLCJzdWJzdHIiLCJ1dWlkIiwiQlVGRkVSX1NJWkUiLCJiaW4iLCJ1dWlkQmluIiwiY2xlYXJCdWZmZXIiLCJ0ZXN0IiwiY3J5cHQwIiwiY3J5cHRvIiwid2luZG93IiwibXNDcnlwdG8iLCJtb2R1bGUiLCJyZXF1aXJlIiwiZXhwb3J0cyIsInJhbmRvbUJ5dGVzIiwiZ2V0UmFuZG9tVmFsdWVzIiwiVWludDhBcnJheSIsInByb3RvdHlwZSIsInNsaWNlIiwibiIsImJ5dGVzIiwiQXJyYXkiLCJmcm9tIiwiciIsInB1c2giLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJyYW5kb21CeXRlc0J1ZmZlcmVkIiwiYiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/uuid-random/index.js\n");

/***/ })

};
;